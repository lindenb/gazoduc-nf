params {
help = false
prefix = ""
dbsnp = "DBSNP"
dbsnp_tbi = "DBSNP_TBI"
samplesheet = "NO_FILE"
/** CSV file with header giving extra info about each sample */
sampleinfo = null
/** extra bam files */
exta_bams = null
/** capture BED */
bed=null
outdir="results"
hts_type = "WGS" /* WGS|WES */
orad_directory = null
with_fastqc = true
with_fastp = true
with_multiqc = true
with_bam_qc = true
with_somalier = true
with_manta = true
with_indexcov = true
with_delly = true
with_pb_haplotypecaller = true
with_pb_deepvariant = true
with_cnvnator = true
with_graphtyper = true
with_bcftools_call = true
with_freebayes = true
with_gatk = true

makewindows_args = "-w 1000000 -s 999900"
bed_cluster_args1 = "--size 10Mb " // callers like gatk+gvcf
bed_cluster_args2 = "--size 1Mb " //callers like freebayes, bcftools
}

apptainer.autoMounts = true
apptainer.enabled = true
apptainer.runOptions = " --nv "



process {


withName : "DOWNLOAD_ORAD" {
	ext.local_dir = {params.orad_directory}
	}

withName : "FASTQC_BEFORE_TRIM" {
	cpus = 10
	ext.prefix = "raw"
	}

withName : "FASTQC_AFTER_TRIM" {
	cpus = 10
	ext.prefix = "trim"
	}

withName : "FASTP" {
	cpus = 10
	}

withName : "PB_FQ2BAM" {
	conda = null
	container = "/LAB-DATA/GLiCID/projects/ITX/tools/parabricks.4_5.sif"
	beforeScript = "module load nvhpc apptainer"
	ext.gpus = 2
	ext.cpu_per_gpu=24
	maxForks = 1
	publishDir = [
          path:{"${params.outdir}/bam/${meta.id}"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{bam,cram,bai,crai}',
          mode: "copy",
          overwrite : true
          ]

	}

withName : "PB_HAPCALLER" {
	conda = null
	container = "/LAB-DATA/GLiCID/projects/ITX/tools/parabricks.4_5.sif"
	beforeScript = "module load nvhpc apptainer"
	ext.gpus = 2
	ext.cpu_per_gpu=24
	maxForks = 1
	}

withName: "PB_DEEPVARIANT:DEEPVARIANT" {
	conda = null
	container = "/LAB-DATA/GLiCID/projects/ITX/tools/parabricks.4_5.sif"
	beforeScript = "module load nvhpc apptainer"
	accelerator = [request:2, type: 'A100-PCIE-40GB']
	ext.cpu_per_gpu=24
	maxForks = 1
}

withName : "PB_BAM2FQ" {
	conda = null
	container = "/LAB-DATA/GLiCID/projects/ITX/tools/parabricks.4_5.sif"
	beforeScript = "module load nvhpc apptainer"
	ext.gpus = 2
	ext.cpu_per_gpu=24
	maxForks = 1
	}

withName : "SCATTER_TO_BED:SCATTER_INTERVALS_BY_NS" {
	ext.output_type = "ACGT"
	ext.max_to_merge = 1
}

withName : "MANTA_SINGLE:MANTA" {
	cpus= 10
}

withName: "INDEXCOV:INDEXCOV_REBUILD_BAI" {
	cpus = 10
}

  withName : "DELLY:SCATTER_TO_BED:SCATTER_INTERVALS_BY_NS" {
    ext.output_type = "N"
    ext.max_to_merge = 1
  }

withName: "BEDTOOLS_MAKEWINDOWS" {
		ext.args = {params.makewindows_args}
		}
/** for callers like hapcaller+gvcf */
withName: "BED_CLUSTER1" {
		ext.args = {params.bed_cluster_args1}
		}
/** for callers like bcftoools/freebayes */
withName: "BED_CLUSTER2" {
		ext.args = {params.bed_cluster_args2}
		}

withName: "HAPLOTYPECALLER:HAPCALLER" {
	array = 100
	}

withName: "PB_HAPLOTYPECALLER:GLNEXUS_GENOTYPE" {
	ext.config = "gatk"
	array = 100
}

withName: "GRAPHTYPER:GTYPER" {
	array = 100
}

withName : "PB_DEEPVARIANT:GLNEXUS_GENOTYPE" {
	ext.config = "DeepVariantWGS"
	array = 100
}
//
withName: "PB_HAPLOTYPECALLER:BCFTOOLS_CONCAT" {
      publishDir = [
          path:{"${params.outdir}/variants/pb_haplotypecaller"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{bcf,csi,vcf.gz,tbi}',
          mode: "copy",
          overwrite : true
          ]
	}

withName: "PB_DEEPVARIANT:BCFTOOLS_CONCAT" {
      publishDir = [
          path:{"${params.outdir}/variants/pb_deepvariant"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{bcf,csi,vcf.gz,tbi}',
          mode: "copy",
          overwrite : true
          ]
	}

withName: "HAPLOTYPECALLER:BCFTOOLS_CONCAT" {
      publishDir = [
          path:{"${params.outdir}/variants/haplotypecaller"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{bcf,csi,vcf.gz,tbi}',
          mode: "copy",
          overwrite : true
          ]
	}

withName: "BCFTOOLS_CALL:BCFTOOLS_CONCAT" {
      publishDir = [
          path:{"${params.outdir}/variants/bcftools"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{bcf,csi,vcf.gz,tbi}',
          mode: "copy",
          overwrite : true
          ]
	}

withName: "FREEBAYES_CALL:BCFTOOLS_CONCAT" {
      publishDir = [
          path:{"${params.outdir}/variants/freebayes"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{bcf,csi,vcf.gz,tbi}',
          mode: "copy",
          overwrite : true
          ]
	}


withName: "BCFTOOLS_STATS|BCFTOOLS_GUESS_PLOIDY" {
	publishDir = [
          path:{"${params.outdir}/variants/${meta.id}/qc"},
          saveAs: { filename -> "${params.prefix}$filename" },
          pattern : '*.{txt,tsv}',
          mode: "copy",
          overwrite : true
          ]
}

withName: "MULTIQC" {
	publishDir = [
		path: { "${params.outdir}/multiqc" },
		mode: "copy",
		pattern : '*.{zip}',
		overwrite : true
		]
	}


}
