

params {
	/* file containing the path to multiple bam files */
	samplesheet="NO_FILE"
	/* optional pedigree , trios will be called using deep variant*/
	pedigree = null
	/* limit to bed */
	bed = null
        makewindows_args = "-w 10000000 -s 9999900"

        error_model = "PCRF.NOVASEQ"
        denovo_only=true
	}



process {
	errorStrategy="finish"

        withName: "OCTOPUS_TRIOS:APPLY_TRIOS" {
                ext.args1 = {params.denovo_only as boolean?"--denovos-only":""}
                ext.error_model= {params.error_model}
                array = 100
                cpus = 10
                memory = {50.GB*task.attempt}
                }
                
        withName: "JVARKIT_BAM_RENAME_CONTIGS" {
                ext.args1 =  {" --fetch-pairs "}
                cpus = 10
                publishDir = [
                        path: { "${params.outdir}/BAMS/${meta.id}" },
                        mode: "symlink",
                        pattern : '*.{bam,bai}',
                        saveAs: { filename -> "${params.prefix}$filename" },
                        overwrite : true
                        ]
                }
        withName: "BED_CLUSTER" {
                ext.args = "--size 10Mb --chromosome"
                }
        withName: "BEDTOOLS_MAKEWINDOWS" {
                ext.args = {params.makewindows_args}
                }


        withName : "COMPILE_VERSIONS" {
                publishDir = [
                        path: { "${params.outdir}" },
                        mode: "copy",
                        pattern : '*.{tsv,csv}',
                        saveAs: { filename -> "${params.prefix}$filename" },
                        overwrite : true
                	]
                }


	withName: "DEEPVARIANT_TRIOS:GLNEXUS_GENOTYPE" {
                cpus = 5
                memory = 15.GB
                ext.config = {"DeepVariant"+params.model_type}
                }

	withName: "DEEPVARIANT_TRIOS:BCFTOOLS_CONCAT" {
		cpus = 20
                memory = 15.GB
                publishDir = [
                        path: { "${params.outdir}" },
                        mode: "copy",
                        pattern : '*.{bcf,vcf,vcf.gz,csi,tbi}',
                        saveAs: { filename -> "${params.prefix}$filename" },
                        overwrite : true
                        ]
        }

        withName: "MULTIQC" {
                publishDir = [
                        path: { "${params.outdir}/multiqc" },
                        mode: "copy",
                        pattern : '*.{zip}',
                        overwrite : true
                        ]
                }

}


