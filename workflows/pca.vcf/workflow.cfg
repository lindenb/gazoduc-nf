includeConfig '../../confs/by_subworkflow/pihat.config'


plugins {
  id 'nf-schema@2.0.0'
}


params {	
	help = false
	prefix = ""
	outdir="work"
	/** input VCF file , or list of VCF path, ends with '.list' */ 
	vcf = "NO_FILE"
	/** optional sample to collection tab delimited for visualization */
	sample2collection = "NO_FILE"
	/** blacklisted regions, optional , as BED */
	blacklisted_bed = "NO_FILE"
	/** min pvalue seuil for plotting as mannathan */
	plot_min_pvalue = 1E-100
	/** remove samples in that file */
	exclude_samples="NO_FILE"
	}

conda.enabled = true

/** END_PARAMS */
process {

withName: "ACP_VCF:ACP_STEP01:PIHAT01:VCF_TO_BED" {
	ext.with_header = false
	}

withName: "ACP_VCF:ACP_STEP01:PIHAT01:MERGE_PIHAT_VCF" {
	ext.save_genome_vcf = true
	}

withName : "ACP_VCF:ACP_STEP01:PIHAT01:MERGE_PIHAT_VCF" {
        publishDir = [
                path:"${params.outdir}/pihat_step1",
                mode: "copy",
                pattern : '*.{png}',
                overwrite : true
                ]
	}

withName : "ACP_VCF:MULTIQC:APPLY_MULTIQC" {
        publishDir = [
                path:"${params.outdir}/multiqc",
                mode: "copy",
                pattern : '*.{zip}',
                overwrite : true
                ]
	
	}
withName : "ACP_VCF:ACP_STEP01:PLINK_CLUSTER" {
        publishDir = [
                path:"${params.outdir}/plink_cluster",
		saveAs: { filename -> "${params.prefix}$filename" },
                mode: "copy",
                pattern : '*.{mds}',
                overwrite : true
                ]

        }

}
