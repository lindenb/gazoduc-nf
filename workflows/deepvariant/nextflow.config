

params {
	/* file containing the path to multiple bam files */
	samplesheet="NO_FILE"
	/* optional pedigree , trios will be called using deep variant*/
	pedigree = null
	/* limit to bed */
	bed = null
        /** deep variant model type e.g: WGS */
        model_type = "undefined"
	}



process {
	errorStrategy="finish"

        withName: "BED_CLUSTER" {
                ext.args = "--size 10Mb --chromosome"
                }

        withName: "DEEPVARIANT_TRIOS:DEEP_TRIO3" {
                cpus = 10
                memory = 50.GB
               ext.model_type = {params.model_type}
               ext.keep_gvcf = true
               conda = null
               /**  apptainer pull --force --disable-cache /LAB-DATA/GLiCID/users/${USER}/APPTAINER/deepvariant_deeptrio.sif "docker://google/deepvariant:deeptrio-1.9.0" */
               container = "/LAB-DATA/GLiCID/users/lindenbaum-p@univ-nantes.fr/APPTAINER/deepvariant_deeptrio.sif"
        }

        withName: "DEEPVARIANT_TRIOS:DEEP_VARIANT_CALL" {
                cpus = 10
                memory = 50.GB
                ext.model_type = {params.model_type}
               ext.keep_gvcf = true
               conda = null
               /**  apptainer pull --force --disable-cache /LAB-DATA/GLiCID/users/${USER}/APPTAINER/deepvariant_deeptrio.sif "docker://google/deepvariant:deeptrio-1.9.0" */
               container = "/LAB-DATA/GLiCID/users/lindenbaum-p@univ-nantes.fr/APPTAINER/deepvariant.sif"
        }

        withName : "COMPILE_VERSIONS" {
                publishDir = [
                        path: { "${params.outdir}" },
                        mode: "copy",
                        pattern : '*.{tsv,csv}',
                        saveAs: { filename -> "${params.prefix}$filename" },
                        overwrite : true
                	]
                }


	withName: "DEEPVARIANT_TRIOS:GLNEXUS_GENOTYPE" {
        cpus = 5
        memory = 15.GB
        ext.config = {"DeepVariant"+params.model_type}
        }

	withName: "DEEPVARIANT_TRIOS:BCFTOOL_CONCAT" {
                publishDir = [
                        path: { "${params.outdir}" },
                        mode: "copy",
                        pattern : '*.{bcf,vcf,vcf.gz,csi,tbi}',
                        saveAs: { filename -> "${params.prefix}$filename" },
                        overwrite : true
                        ]
        }

        withName: "MULTIQC" {
                publishDir = [
                        path: { "${params.outdir}/multiqc" },
                        mode: "copy",
                        pattern : '*.{zip}',
                        overwrite : true
                        ]
        }


}


