plugins {
  id 'nf-boost'
}

boost {
  cleanup = false
}

params {
    // fasta defined in config
    // fai defined in config
    // dict defined in config
    samplesheet = null //required CSV file with header vcf[,idx,id]? 
    pedigree=null
    ped = null
    bams = null  //optional CSV file with (sample,bam,bai) used to plot igvreport for denovo mutations
    prefix="prefix"
    outdir="results"
    so_accession="SO:0001818,SO:0001629"
    af_gnomad = 0.01
    help=false
}


process {


  withName : "INTERVAL_LIST_TO_BED" {
    ext.awk_filter = "(\$1 ~ /^(chr)?[XY0-9]+\$/)"
  }

  withName: "WORKFLOW_SNV:SPLIT_VCF:BED_CLUSTER" {
    ext.args = "--size 1Mb"
  }

  withName: "BCFTOOLS_NORM" {
    ext.args1 = "-m2 -M3"
    ext.set_id = "%VKX"
  }

  withName: "WORKFLOW_SNV:APPLY_SNPEFF:ANNOTATE" {
    ext.accessions={params.so_accession}
    ext.args2="-r -R"
  }

  withName: "JVARKIT_VCFGNOMAD" {
    ext.max_af={params.af_gnomad}
    // double escape because jvarkit bash wrapper
    ext.filterjdk="  -e 'return variant.isNotFiltered() || variant.getFilters().stream().filter(F->!F.endsWith(\\\"_AC0\\\")).noneMatch(S->S.startsWith(\\\"GNOMAD_GENOME_\\\") || S.startsWith(\\\"GNOMAD_EXOME_\\\"));' "
  }

	withName: "STRUCTURAL_VARIANTS:ANNOTATE_SV:VEP_GRCH38:APPLY_VEP" {
		ext.test_trio_exists = false
		}

	withName : "SCATTER_INTERVALS_BY_NS" {
		ext.output_type = "ACGT"
		ext.max_to_merge = 1
	}

	withName : "SPLIT_N_VARIANTS" {
		ext.method  = "--variants-count 10000"
	}
    
    withName: "NO_CALL_TO_HOM_REF" {
        ext.args1 = " -t . -n 0"
    }

  withName : "WORKFLOW_SNV:WORKFLOW_DENOVO_SNV:REPORT" {
      publishDir = [
          path:"${params.outdir}",
          saveAs: { filename -> "${params.prefix}$filename" },
          mode: "move",
          pattern : '*.{bcf,csi,vcf.gz,tbi,txt,tsv}',
          overwrite : true
          ]
  }

}
